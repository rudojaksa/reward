#!/usr/bin/perl
# Copyleft: R.Jaksa 2018, GNU General Public License version 3
# ------------------------------------------------------------------------- SUPPORT

# colors
$CR_="\033[31m"; # color red
$CG_="\033[32m"; # color green
$CY_="\033[33m"; # color yellow
$CB_="\033[34m"; # color blue
$CM_="\033[35m"; # color magenta
$CC_="\033[36m"; # color cyan
$CW_="\033[37m"; # color white
$CK_="\033[90m"; # color black
$CP_="\033[91m"; # color pink
$CL_="\033[92m"; # color lime
$CS_="\033[93m"; # color sulphur yellow
$CZ_="\033[94m"; # color azure
$CO_="\033[95m"; # color orchid
$CA_="\033[96m"; # color aqua cyan
$CF_="\033[97m"; # color fluorescent white
$CD_="\033[0m";  # color default

# inar(\@a,$s) - check whether the string is in the array
sub inar {
  my $a=$_[0]; # array ref
  my $s=$_[1]; # string
  foreach(@{$a}) { return 1 if $_ eq $s; }
  return 0; }

# --------------------------------------------------------------------------- ARGVS

our $INPUT = $ARGV[0];

die "not a file \"$INPUT\"" if not -f $INPUT;

# --------------------------------------------------------------------------- INPUT

$RAW = `cat $INPUT`;

# ------------------------------------------------------------------- PREPROCESSING

# remove color escape sequences
$RAW =~ s/\033\[36m//g;	# cyan
$RAW =~ s/\033\[37m//g;	# white
$RAW =~ s/\033\[90m//g;	# black
$RAW =~ s/\033\[0m//g;	# default

# titles
$RAW =~ s/\n([A-Z])/\n\#\#\# $1/g;
$RAW =~ s/\n([A-Za-z0-9-]+(\h+[A-Za-z0-9-]+)?(\h+[A-Za-z0-9-]+)?:)/\n\#\#\#\# $1/g;

# multiple newlines
$RAW =~ s/\n\h*\n\h*(\n\h*)+/\n\n/g;

# ------------------------------------------------------------------------ SECTIONS

$REG=<<EOF;
NAME
DESCRIPTION
VERSION
AUTHOR
REPORTING BUGS
COPYRIGHT
SEE ALSO
EOF

our @REG = split /\n/,$REG; # regular sections
our @PRE; # preformated sections (the rest)

my $hdr; # current header
my $ind = 1000; # total minimal indentation level
foreach my $s (split /\n/,$RAW) {

  # header
  if($s =~ /^\#\#* (.*)\h*$/) {
    $hdr = $1;
    push @PRE,$hdr if not inar \@REG,$hdr; } # store PRE headers names
  
  # regular sections line
  elsif(inar \@REG,$hdr) {}

  # preformated sections line
  elsif($s =~ /^\h*$/) {} # skip empty lines
  else {
    if($s =~ /^( *)/) {
      my $len = length $1;
      $ind = $len if $len < $ind; }}}

# --------------------------------------------------------------------- PREFORMATED

my $px = ""; # required prefix to maintain minimal indentatiot to be four
for(my $i=0; $i<4-$ind; $i++) { $px.=" "; }

my $out; # output string
my $sp; # indentation space for current regular section
undef $hdr;
foreach my $s (split /\n/,$RAW) {

  # header
  if($s =~ /^\#\#* (.*)\h*$/) {
    $hdr = $1;
    $out .= "$s\n";
    if(inar \@REG,$hdr) {
      if($RAW =~ /\#\#* $hdr\n( *)[^ ]/) { $sp = $1; }}}

  # regular sections line
  elsif(inar \@REG,$hdr) {
    $s =~ s/^$sp//;
    $out .= "$s\n"; }
    
  # regular sections line
  else {
    $out .= "$px$s\n"; }}

# -------------------------------------------------------------------------- OUTPUT

# add final newline
$out .= "\n";

# print output
print "$out";

# ---------------------------------------------------------------------------------
